name: Deploy to VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.VPS_SSH_KEY }}
        
    - name: Deploy to VPS
      run: |
        ssh -o StrictHostKeyChecking=no root@148.230.93.128 << 'ENDSSH'
          set -e
          
          # Install Docker if not present
          if ! command -v docker &> /dev/null; then
            echo "Installing Docker..."
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh
            systemctl enable docker
            systemctl start docker
            rm get-docker.sh
          fi
          
          # Install Docker Compose if not present
          if ! command -v docker-compose &> /dev/null; then
            echo "Installing Docker Compose..."
            curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
          fi
          
          # Create app directory if it doesn't exist
          mkdir -p /var/www/tiktok-video-text-overlay-api
          cd /var/www/tiktok-video-text-overlay-api
          
          # Clone or update repository
          if [ ! -d ".git" ]; then
            echo "Cloning repository..."
            rm -rf * .*  2>/dev/null || true
            git clone https://github.com/ChromePack/TikTok-video-text-overlay-API.git .
          else
            echo "Updating repository..."
            git pull origin main
          fi
          
          # Stop current container
          docker-compose down 2>/dev/null || true
          
          # Remove old images to save space
          docker image prune -f
          
          # Rebuild and start container
          docker-compose up --build -d
          
          # Show status
          docker-compose ps
          
          # Check if service is healthy
          echo "Waiting for service to start..."
          sleep 15
          curl -f http://localhost:3003/health || { echo "Health check failed"; docker-compose logs; exit 1; }
          
          echo "Deployment completed successfully!"
        ENDSSH